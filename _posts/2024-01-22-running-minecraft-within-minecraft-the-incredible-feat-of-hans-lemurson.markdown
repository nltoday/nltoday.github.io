---
layout: post
title: "Running Minecraft Within Minecraft: The Incredible Feat of Hans Lemurson"
date: 2024-01-22 05:50:08 +0000
categories: "News"
excerpt_image: https://i.ytimg.com/vi/hxnjmRxg30Y/maxresdefault.jpg
image: https://i.ytimg.com/vi/hxnjmRxg30Y/maxresdefault.jpg
---

### Achieving Turing Completeness in Minecraft
As discussed in the video "Minecraft Quad-Core Redstone Computer v4.0", the redstone components in Minecraft provide enough logic gates and functions to simulate a Turing machine. [Any system that is Turing complete has the ability to compute anything that any other Turing complete system can compute](https://store.fi.io.vn/funny-video-gamer-xmas-i-paused-my-game-to-be-here-christmas-24/women&), given enough time and memory. While it would be incredibly slow, the redstone elements allow for computations to take place programmatically within the game. With multiple iterations of such computers, one could theoretically run increasingly more complex programs and software.

![](https://nintendoeverything.com/wp-content/uploads/minecraft-incredibles-1-656x369.jpg)
### Building the First "Minecraft in Minecraft" 
Taking this idea to the next level, player Hans Lemurson sought to achieve the nearly impossible - running Minecraft itself within the game. Most would dismiss such an idea as far too difficult. However, Lemurson was determined to prove the theory could become reality. Through meticulous planning and tireless construction using redstone, he built a basic 2D version of Minecraft within a confined 8x8 area. Players could move between the 64 tiles, build and destroy blocks, replicating core gameplay functions on a small scale. To prove his creation was truly running Minecraft code internally, he asked if others thought it possible to run the game within his program. Against all odds, he answered by doing just that.
### Coding the 2D Demake of Minecraft
In order to code his 2D "Minecraft in Minecraft", Lemurson had to find creative ways to represent the various game functions and UI using redstone components. For movement, he devised a system where pressing one of four buttons would output a redstone signal to move the player sprite in that direction. Crafting was achieved through a complicated circuit that took raw materials as input and output finished blocks. Displaying the gameplay area required **redstone-powered pixel displays** to show the top-down 2D world tile-by-tile. Updating these displays as the player built and explored was a unique coding challenge. Through innovative solutions like these, he managed to recreate Minecraft at its core.
### The Ingenious Redstone Design 
Behind Lemurson's "Minecraft in Minecraft" was an immensely complex and sophisticated **redstone circuitry** filling the entire 8x8 build area. To allow for fluid gameplay, every action like movement or building had to trigger a timed sequence of logical gates and memory cells to update the displayed world and track the player's location. Integrating all these programs together into a cohesive experience demonstrating true Turing completeness was an unbelievable programming feat. Even more impressive is the redstone worked flawlessly with no bugs or glitches, a testament to Lemurson's talent and dedication in bringing such an ambitious project to life.
### Proving the Impossible is Possible
Upon completing his 2D prototype, Lemurson proved to doubters that he was not joking or exaggerating his claims. In a follow up video, he showed off his creation running smoothly, even spawning mobs to prove it was truly executing Minecraft code from within. This blew people away, as accomplishing "Minecraft in Minecraft" was viewed as completely impossible prior. By taking an abstract computer science concept and manifesting it in a mind-blowing demonstration, Lemurson inspired many about what can be achieved through lateral thinking and perseverance. His incredible creation stands as proof that with enough ingenuity and passion, what seems out of reach can be brought well within mankind's grasp.
### Pushing the Boundaries of In-Game Programming
Lemurson's "Minecraft in Minecraft" changed perspectives about what could be built within games. It set a new high water mark for complex in-game circuitry and programming. While running at a basic level, the core mechanics of the full game were faithfully reproduced, bringing the theoretical to life. Many view it as the most astonishing programming feat ever achieved in a game to date. Years later, no one has yet matched this scale of a simulation within the same game. Lemurson gave hope that with more advanced tools and block limits increased, even more marvelous creations may someday be possible. He reminded us to never lose that sense of wonder and to always continue boldly exploring the edges of what games and their communities make imaginable.
### A Unique Skill and Perspective
Through his one-of-a-kind creation, Lemurson demonstrated rare and powerful skills in logical thinking, circuit design, and out-of-the-box problem solving. Most see programming as writing code, but he expressed it through an ingenious construction no one thought possible beforehand. **By visualizing abstractions in a physical medium**, he was able to triumph where programmers alone may have doubted. His perspective was perfectly gamified yet deeply insightful, proving indispensable problems can have solutions right before our eyes, if only we refine our vision. "Minecraft in Minecraft" showed the promising future when artistry, play, and higher reasoning intersect to advance both games and humanity's collective genius in new journeys without end.
![Running Minecraft Within Minecraft: The Incredible Feat of Hans Lemurson](https://i.ytimg.com/vi/hxnjmRxg30Y/maxresdefault.jpg)